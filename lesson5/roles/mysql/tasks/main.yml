---
   
- name: Install required packages 
  ansible.builtin.apt:
    name:
      - "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
    - python3-selinux
    - mysql-server
    - python3-mysqldb

- name: Copy mysql configs
  tags: test2
  copy: 
    src: "{{ item }}"
    dest: /etc/mysql/conf.d/
  with_items:
    - 02-max-connections.cnf
    - 03-performance.cnf
    - 04-slow-query.cnf
    - 05-binlog.cnf
  
- name: Copy mysql configs 2
  tags: test2
  template:
    src: 01-base.cnf.j2
    dest: /etc/mysql/conf.d/01-base.cnf

- name: Allow mysql remote connections
  tags: always 
  replace: 
    path: /etc/mysql/mysql.conf.d/mysqld.cnf 
    regexp: "127.0.0.1"
    replace: "0.0.0.0"    

- name: Copy .my.cnf file with root password credentials
  tags: test2
  template:
    src: .my.cnf.j2
    dest: ~/.my.cnf
    mode: 0600

- name: Restart the mysql service
  tags: test2
  service:
    name: "mysql"
    state: restarted
    enabled: yes

- name: Update mysql root password for all root accounts 1
  tags: ms
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "secret"
    priv: '*.*:ALL,GRANT'
  with_items:
  - "{{ ansible_hostname }}"
  - 192.168.10.11
  - 192.168.10.12
  - 127.0.0.1
  - ::1
  - localhost
  when: ansible_hostname != 'localhost'
  
- name: Update mysql root password for all root accounts 2
  tags: ms
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "secret"
    priv: '*.*:ALL,GRANT'
  with_items:
  - 192.168.10.11
  - 192.168.10.12
  - 127.0.0.1
  - ::1
  - localhost
  when: ansible_hostname == 'localhost'

- name: Create new database
  tags: test77
  mysql_db:
    name:
      - bet
    state: present
  when: (ansible_hostname == "sql1")

- name: Copy initial db dump to sql1
  copy: 
      src: bet.dmp
      dest: /tmp/bet.dmp
  when: (ansible_hostname == "sql1")

- name: Restore dump on sql1
  tags: test88
  mysql_db:
    name: bet
    state: import
    target: /tmp/bet.dmp
  when: (ansible_hostname == "sql1")

